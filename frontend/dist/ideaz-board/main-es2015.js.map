{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/apollo-cache-update.helper.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/board-tape.component.ts","./src/app/components/idea-card.component.ts","./src/app/components/idea-section.component.ts","./src/app/components/navbar.component.ts","./src/app/components/pincode.component.ts","./src/app/directives/active-focus.directive.ts","./src/app/graphql.module.ts","./src/app/pages/board-page.component.ts","./src/app/pages/board-page.component.html","./src/app/pages/home-page.component.ts","./src/app/pages/home-page.component.html","./src/app/route.config.ts","./src/app/services/board-activity.service.ts","./src/app/services/browser-storage.service.ts","./src/app/services/color-provider.service.ts","./src/app/services/export-board.service.ts","./src/environments/environment.ts","./src/graphql/mutations.ts","./src/graphql/queries.ts","./src/graphql/subscriptions.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { GetBoard } from '../graphql/queries';\n\ninterface EntityIDs {\n  boardId: string;\n  cardId?: string;\n  sectionId?: string;\n}\n\nconst getBoard = (boardId: string) => ({\n  query: GetBoard,\n  variables: { boardId }\n})\n\nconst findById = (id) => (item) => item.id === id;\n\nexport const cacheUpdateCardSub = (prev: any, { subscriptionData }) => {\n  const { sections } = prev.getBoard;\n  const { cardUpdated } = subscriptionData.data;\n  const sectionToBeUpdated = sections.find(section => section.id === cardUpdated.sectionId);\n  const cardToUpdate = sectionToBeUpdated.cards.find(card => card.id === cardUpdated.id);\n\n  if (!cardToUpdate) {\n    sectionToBeUpdated.cards.push(cardUpdated);\n  }\n  return prev\n}\n\nexport const cacheRemoveCardSub = (prev: any, { subscriptionData}) => {\n  const { sections } = prev.getBoard;\n  const { id: cardId, sectionId } = subscriptionData.data.cardDeleted;\n  const sectionToBeUpdated = sections.find(section => section.id === sectionId);\n  sectionToBeUpdated.cards = sectionToBeUpdated.cards.filter(card => card.id !== cardId)\n  return prev\n}\n\nexport const cacheRemoveSectionSub = (prev: any, { subscriptionData }) => {\n  const { sections } = prev.getBoard;\n  const { id: sectionId } = subscriptionData.data.sectionDeleted;\n  prev.getBoard.sections = sections.filter(section => section.id !== sectionId)\n  return prev\n}\n\nexport const cacheAddSectionSub = (prev: any, { subscriptionData}) => {\n  return {\n    ...prev,\n    getBoard: {\n      ...prev.getBoard,\n      sections: [\n        ...prev.getBoard.sections,\n        subscriptionData.data.sectionAdded\n      ]\n    }\n  }\n}\n\nexport const cacheCreateCard = ({boardId, sectionId}: EntityIDs) =>\n  (store, { data: { addCard }}: any) => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // Find the section the card belongs to\n    const chosenSection = data.getBoard.sections.find(section => section.id === sectionId);\n\n    // Add the card to the section\n    chosenSection.cards.push({...addCard, editing: true})\n\n    // Write the data back to the cache.\n    store.writeQuery({...getBoard(boardId), data});\n  }\n\nexport const cacheUpdateCard = ({boardId, sectionId}: EntityIDs) =>\n    (store, { data: { updateCard } }: any) => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // Find the section the card belongs to\n    const chosenSection = data.getBoard.sections.find(section => section.id === sectionId);\n\n    const alreadyHasCard = chosenSection.cards.find(c => c.id === updateCard.id)\n\n    // if the section doesn't have the card, we need to add it to the section\n    if (!alreadyHasCard){\n      chosenSection.cards.push(updateCard)\n      // Write the data back to the cache.\n      store.writeQuery({...getBoard(boardId), data});\n    }\n  }\n\nexport const cacheDeleteCard = ({boardId, sectionId, cardId}: EntityIDs) =>\n  store => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // Find the section from which to remove the card\n    const chosenSection = data.getBoard.sections.find(s => s.id === sectionId);\n\n    // Remove the card from the section\n    chosenSection.cards = chosenSection.cards.filter(c => c.id !== cardId);\n\n    // Write the data back to the cache.\n    store.writeQuery({...getBoard(boardId), data});\n  }\n\nexport const cacheCreateSection = ({ boardId }: EntityIDs) =>\n  (store, { data: { addSection } }: any) => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    const alreadyHasSection = data.getBoard.sections.some(findById(addSection.id))\n\n    if (!alreadyHasSection){\n      // Add our section from the mutation to the end.\n      data.getBoard.sections.push(addSection);\n      // Write the data back to the cache.\n      store.writeQuery({ ...getBoard(boardId), data });\n    }\n  }\n\nexport const cacheDeleteSection = ({ boardId, sectionId }: EntityIDs) =>\n  store => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // remove section from board\n    data.getBoard.sections = data.getBoard.sections.filter(s => s.id !== sectionId);\n\n    store.writeQuery({ ...getBoard(boardId), data });\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { BrowserStorageService } from '@services/browser-storage.service';\nimport { BoardActivityService } from '@services/board-activity.service';\nimport { User } from '@models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'ideaz-board';\n  user: User;\n  token: string;\n\n  constructor (\n    private browserStorageSvc: BrowserStorageService,\n    private boardActivitySvc: BoardActivityService\n  ) {}\n\n  ngOnInit () {\n    this.user = this.browserStorageSvc.user;\n    this.token = this.browserStorageSvc.token;\n  }\n\n  addUser (username, password) {\n    if (!(username && password)) return;\n    this.boardActivitySvc.getUserToken(username, password)\n      .subscribe((result: any) => {\n        this.token = result.data.getUserToken;\n        this.browserStorageSvc.token = result.data.getUserToken\n      })\n\n    const user: User = { username, password };\n    this.browserStorageSvc.user = user;\n    this.user = user;\n  }\n}\n","<div class=\"top-level-overlay\" *ngIf=\"!token\">\n  <div class=\"box box__outer\">\n    <p>Please add your name and password to help distinguish your posts.</p>\n    <div class=\"box__inner\">\n      <span>\n        <!-- <label for=\"initials\">\n          Initials\n        </label> -->\n        <input type=\"text\" placeholder=\"Username\" id=\"username\" #username>\n      </span>\n      <span>\n   <!--      <label for=\"email\">\n          Email\n        </label> -->\n        <input type=\"text\" placeholder=\"Password\" id=\"password\" #password>\n      </span>\n    </div>\n    <button (click)=\"addUser(username.value, password.value)\">Add</button>\n  </div>\n</div>\n<div class=\"app-layout\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NavbarComponent } from '@components/navbar.component';\nimport { AppComponent } from './app.component';\n\nimport { IdeaCardComponent } from '@components/idea-card.component';\nimport { IdeaSectionComponent } from '@components/idea-section.component';\nimport { BoardTapeComponent } from '@components/board-tape.component';\nimport { PincodeComponent } from '@components/pincode.component';\n\nimport { appRoutes } from './route.config';\n\nimport { HomePageComponent } from '@pages/home-page.component';\nimport { BoardPageComponent } from '@pages/board-page.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\n\nimport { ActiveFocusDirective } from './directives/active-focus.directive';\nimport { GraphQLModule } from './graphql.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IdeaCardComponent,\n    IdeaSectionComponent,\n    BoardTapeComponent,\n    NavbarComponent,\n    HomePageComponent,\n    PincodeComponent,\n    BoardPageComponent,\n    ActiveFocusDirective\n    // ...appRoutes.map(route => route.component).filter(c => !!c)\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    GraphQLModule,\n    FontAwesomeModule,\n    // RouterModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board-tape',\n  template: `\n    <div\n      class=\"board-tape\"\n      [ngStyle]=\"{\n        top: vertical ? '-13%' : 0,\n        height: vertical ? '110%' : '30px',\n        margin: vertical ? '5px 10px': '10px',\n        width: vertical ? '30px': 'calc(100% - 50px)',\n        transform: 'rotateZ(' + angle + 'deg)',\n        left: vertical ? 0 : '10px'\n      }\"\n    ></div>\n  `,\n  styles: [`\n    .board-tape {\n      min-width: 30px;\n      display: block;\n      position: relative;\n      background: rgba(255,255,200, 0.6);\n      box-shadow: 0 1px 3px rgba(0,0,0,0.4);\n    }\n  `]\n})\nexport class BoardTapeComponent implements OnInit {\n  @Input() vertical: boolean;\n  angle: number;\n  ngOnInit () {\n    this.angle = Math.floor(Math.random() * 3) - 1;\n  }\n}","import { Component, Input, ViewChild, OnInit } from '@angular/core';\nimport rough from 'roughjs/bundled/rough.esm.js';\n\n@Component({\n  selector: 'app-idea-card',\n  template: `\n    <div\n      [ngClass]=\"{'ib-card': true, 'editing': editing }\"\n      [ngStyle]=\"{'width.px': chosenDimensions[2] || 230, 'height.px': chosenDimensions[3] || 160}\"\n      tabindex=\"0\"\n    >\n      <div class=\"pin-wrapper\" *ngIf=\"withPin\">\n        <div id=\"push-pin\" [ngClass]=\"{'edit': editing}\" pin></div>\n      </div>\n      <div\n        class=\"ib-card-content\"\n        [style.color]=\"color\"\n        [style.fontSize]=\"fontSize || '1.1rem'\"\n      >\n        <ng-content></ng-content>\n      </div>\n      <svg #svg></svg>\n    </div>\n  `,\n  styleUrls: ['./idea-card.component.css']\n})\nexport class IdeaCardComponent implements OnInit {\n  private roughSvg: any;\n  private node: any;\n  public chosenDimensions: [number, number, number, number];\n  // angle: number;\n  @Input() text: string;\n  @Input() backgroundColor: string;\n  @Input() borderColor: string;\n  @Input() color: string;\n  @Input() fillStyle: string;\n  @Input() roughness: number;\n  @Input() fontSize: string;\n  @Input() editing: boolean;\n  @Input() withPin: boolean;\n  @Input() hachureGap: number;\n  @Input() strokeWidth: number;\n  @Input() dimensions: [number, number, number, number];\n\n  @ViewChild('svg', { static: true }) svg;\n\n  ngOnInit() {\n    // this.angle = Math.floor(Math.random() * 3) - 1;\n    this.roughSvg = rough.svg(this.svg);\n\n    this.chosenDimensions = this.dimensions || [ 5, 5, 230, 160];\n\n    this.node = this.roughSvg.rectangle(...this.chosenDimensions, {\n      roughness: this.roughness || 0.9,\n      fill: this.backgroundColor || 'pink',\n      fillStyle: this.fillStyle || 'solid',\n      stroke: this.borderColor || 'black',\n      hachureGap: this.hachureGap || 0,\n      strokeWidth: this.strokeWidth || .5\n    })\n    // let outline = this.node.querySelector('path:last-child');\n    // outline.setAttribute('style', 'stroke-width: 1; fill: none;')\n    // outline.setAttribute('class', 'card-outline')\n    this.svg.nativeElement.appendChild(this.node)\n\n    // this.node = this.roughSvg.path('M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z', {\n    //   // fill: 'red',\n    //   roughness: this.roughness || 2.5,\n    //   fill: this.backgroundColor || 'pink',\n    //   // hachureAngle: 60,\n    //   // hachureGap:5,\n    //   fillStyle: this.fillStyle || 'solid',\n    //   stroke: this.borderColor || 'black',\n    //   strokeWidth: 10,\n    //   // viewBox: '0 0 800 800',\n    //   // width: '25'\n    // })\n\n    // this.svg.nativeElement.appendChild(this.node)\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-idea-section',\n  template: `\n    <section>\n      <div>\n        <div class=\"section-title\">\n          <ng-content select='.title'></ng-content>\n        </div>\n        <app-board-tape [vertical]=\"true\"></app-board-tape>\n        <div [style.width]=\"'100%'\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n      <app-board-tape></app-board-tape>\n    </section>\n  `,\n  styles: [`\n    section {\n      height: 100%;\n      margin: 30px 0;\n    }\n    section > div {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      position: relative;\n      margin-bottom: -20px;\n    }\n\n    app-board-tape {\n      height: 100%;\n    }\n  `]\n})\nexport class IdeaSectionComponent {}","import { Component, EventEmitter, Output, Input, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  template: `\n    <nav>\n      <div *ngIf=\"showContent\" class=\"navbar-content\">\n        <div class=\"nav-title \">\n          <div class=\"nav-user\" *ngIf=\"boardTitle\">\n            {{boardTitle}}\n          </div>\n        </div>\n        <span class=\"routes\">\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"changeView.emit()\">\n              VIEW: {{viewStyle}}\n            </span>\n          </div>\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"addToClipboard.emit()\">\n              COPY URL\n            </span>\n          </div>\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"exportAsPdf.emit()\">\n              EXPORT\n            </span>\n          </div>\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"addSection.emit()\">\n              +SECTION\n            </span>\n          </div>\n        </span>\n      </div>\n      <div *ngIf=\"!showContent\" class=\"access-pin\">\n        <app-pincode [pincodeLength]=\"4\" (pincodeEntered)=\"handlePinEntry($event)\">\n          <div class=\"nav-title nav-user\">This board is pin protected:</div>\n        </app-pincode>\n      </div>\n    </nav>\n  `,\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  @Input() boardTitle: string;\n  @Input() viewStyle: string;\n  @Input() showContent: boolean;\n  @Output() addSection = new EventEmitter();\n  @Output() exportAsPdf = new EventEmitter();\n  @Output() addToClipboard = new EventEmitter();\n  @Output() changeView = new EventEmitter();\n  @Output() sendPin = new EventEmitter();\n  private pincode = '';\n\n  handlePinEntry (pincode: string) {\n    this.sendPin.emit(pincode);\n  }\n\n  // handleKeyup (e) {\n  //   console.log(e.target.value)\n  //   this.pincode = this.pincode + e.target.value;\n  //   let next = new ElementRef(e.target.nextSibling);\n  //   next.nativeElement.focus();\n  // }\n\n  // handleLastKeyup (e) {\n  //   e.stopPropagation();\n  //   this.sendPin.emit(this.pincode + e.target.value);\n  //   this.pincode = '';\n  //   console.log(this.pincode + e.target.value)\n  // }\n}","import { Component, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-pincode',\n  template: `\n    <div class=\"access-pin\" (keyup)=\"handleKeyup($event)\">\n      <label for=\"pincode-first-char\">\n        <ng-content></ng-content>\n      </label>\n      <input\n        id=\"pincode-first-char\"\n        type=\"password\"\n        class=\"single-digit\"\n        maxlength=\"1\"\n        activeFocus\n      />\n      <input\n        type=\"password\"\n        class=\"single-digit\"\n        maxlength=\"1\"\n        *ngFor=\"let char of characters; index as i;\"\n        (keyup)=\"handleLastPinKey($event, i)\"\n      />\n    </div>\n  `,\n  styles: [`\n    .access-pin {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .single-digit {\n      width: 20px;\n      margin: 0 1px;\n      text-align: center;\n    }\n\n    .access-pin {\n      justify-content: center;\n    }\n  `]\n})\nexport class PincodeComponent implements OnInit {\n  @Input() pincodeLength: number;\n  @Output() pincodeEntered = new EventEmitter();\n  private _characters: any[];\n  private pincode = '';\n\n  ngOnInit () {\n    this._characters = new Array(this.pincodeLength - 1); // minus 1 for the extra input outside the loop\n  }\n\n  get characters () {\n    return this._characters;\n  }\n\n  get lastPinIndex () {\n    return this._characters.length - 1;\n  }\n\n  handleKeyup (e) {\n    this.pincode = this.pincode + e.target.value;\n    let next = new ElementRef(e.target.nextElementSibling);\n    next.nativeElement.focus();\n  }\n\n  handleLastPinKey (e, index) {\n    if (index !== this.lastPinIndex) return;\n    e.stopPropagation();\n    this.pincodeEntered.emit(this.pincode + e.target.value);\n    this.pincode = '';\n  }\n}","import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[activeFocus]'\n})\nexport class ActiveFocusDirective implements AfterViewInit {\n\n  constructor(private eleRef: ElementRef) {}\n\n  private putCursorAtEnd (el: any) {\n    if (typeof el.selectionStart == \"number\") {\n      el.selectionStart = el.selectionEnd = el.value.length;\n      el.focus()\n    } else if (el.createTextRange) {\n      el.focus();\n      var range = el.createTextRange();\n      range.collapse(false);\n      range.select();\n    }\n  }\n\n  ngAfterViewInit () {\n    this.putCursorAtEnd(this.eleRef.nativeElement)\n  }\n\n}","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\n\n// const uri = 'http://localhost:3000/graphql';\nconst SERVER_PATH = 'localhost:4000/graphql'; // <-- add the URL of the GraphQL server here\n// export function createApollo(httpLink: HttpLink) {\n//   return {\n//     link: httpLink.create({uri: `http://${SERVER_PATH}`}),\n//     cache: new InMemoryCache(),\n//   };\n// }\n\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [{\n    provide: APOLLO_OPTIONS,\n    useFactory: (httpLink: HttpLink) => {\n\n      const ws = new WebSocketLink({\n        uri: `ws://${SERVER_PATH}`,\n        options: {\n          reconnect: true\n        }\n      });\n\n      const http = httpLink.create({\n        uri: `http://${SERVER_PATH}`\n      });\n\n      const authLink = setContext((_, { headers }) => {\n        // get the authentication token from local storage if it exists\n        const token = localStorage.getItem('token');\n        // return the headers to the context so httpLink can read them\n        return {\n          headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : \"\",\n          }\n        }\n      });\n\n      // const errorLink = onError(({ graphQLErrors, networkError }) => {\n      //   if (graphQLErrors)\n      //     graphQLErrors.map(({ message, locations, path }) =>\n      //       console.log(\n      //         `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      //       ),\n      //     );\n\n      //   if (networkError) console.log(`[Network error]: ${networkError}`);\n      // });\n\n      return {\n        cache: new InMemoryCache(),\n        link: split(({ query }) => {\n          const { kind, operation }: any = getMainDefinition(query);\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        }, ws, authLink.concat(http))\n      }\n    },\n    deps: [HttpLink]\n  }],\n})\nexport class GraphQLModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BoardActivityService } from '@services/board-activity.service';\nimport { ColorProviderService } from '@services/color-provider.service';\nimport { ExportBoardService } from '@services/export-board.service';\nimport { BrowserStorageService } from '@services/browser-storage.service';\nimport { CardStyle, Section, Board, Card } from '@models';\nimport { GetBoard } from '../../graphql/queries';\nimport { take, pluck, map, switchMap, catchError } from 'rxjs/operators';\nimport { EMPTY, Observable, throwError } from 'rxjs';\nimport { faTrashAlt, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport copy from 'copy-text-to-clipboard';\n\ntype CardBeingEdited = {\n  id: string;\n  parentSectionId: string\n}\n\nenum View {\n  Clean = 'CLEAN',\n  Artsy = 'ARTSY'\n}\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './board-page.component.html',\n  styleUrls: ['./board-page.component.css']\n})\nexport class BoardPageComponent implements OnInit, OnDestroy {\n  private subscription: any;\n  private boardId: string;\n  private _cardBeingEdited: CardBeingEdited | null;\n\n  public boardTitle: string;\n  public isAddingSection = false;\n  public sections$: Observable<any>;\n  public view: View;\n  public requiresPin = false;\n  // icons for use in template\n  public trashIcon = faTrashAlt;\n  public plusIcon = faPlusSquare;\n\n\n  constructor(\n    private boardActivitySvc: BoardActivityService,\n    private route: ActivatedRoute,\n    private exportSvc: ExportBoardService,\n    private colorProvider: ColorProviderService,\n    private browserStorageSvc: BrowserStorageService\n  ) {}\n\n  /***********************************************************************************\n                               LIFECYCLE METHODS\n  ************************************************************************************/\n\n  ngOnInit () {\n    this.view = View.Artsy;\n    this.cardBeingEdited = null;\n    this.subscription = this.getBoard();\n  }\n\n  ngOnDestroy () {\n    this.subscription.unsubscribe();\n  }\n\n  /***********************************************************************************\n                               GETTERS / SETTERS\n  ************************************************************************************/\n\n  get username () {\n    const user = this.browserStorageSvc.user;\n    return user.username\n  }\n\n  // The idea of this setter method is to save any card as it exits edit mode.\n  // i.e, when it is pinned back to the board.\n  set cardBeingEdited (card: CardBeingEdited) {\n    const noNewCardWasSelected = () => card == null;\n    const selectedCardWasClickedAgain = () => this._cardBeingEdited.id === card.id;\n    const aCardIsAlreadySelected = () => !!this._cardBeingEdited;\n    const aCardWasSelected = () => card != null;\n\n    if (aCardIsAlreadySelected()) {\n      // Save the card\n      this.saveCurrentlySelectedCard$(this._cardBeingEdited).subscribe();\n\n      if (noNewCardWasSelected() || selectedCardWasClickedAgain()) {\n        // Exit editing mode\n        this._cardBeingEdited = null;\n\n      } else {\n        // Swap the card being edited\n        this._cardBeingEdited = { id: card.id, parentSectionId: card.parentSectionId };\n      }\n    } else if (aCardWasSelected()) {\n      // Enter edit mode with selected card\n      this._cardBeingEdited = { id: card.id, parentSectionId: card.parentSectionId };\n    }\n  }\n\n  get cardBeingEdited () {\n    return this._cardBeingEdited\n  }\n\n  /***********************************************************************************\n                               HELPER METHODS\n  ************************************************************************************/\n\n  // prevent unnecessary re-rendering of existing cards\n  trackById(index, item) {\n    return item.id;\n  }\n\n  getColorForSection (num: number) {\n    return this.colorProvider.colorAtIndex(num);\n  }\n\n  resetCreateSectionCard (sectionTitle) {\n    sectionTitle.value = '';\n    this.isAddingSection = false;\n  }\n\n  isEditing (cardId) {\n    return this.cardBeingEdited && this.cardBeingEdited.id === cardId\n  }\n\n  filterById (searchId) {\n    return arrayOfObjects => arrayOfObjects.filter(obj => obj.id === searchId)\n  }\n\n  changeTextOnCurrentCard (event, card) {\n    card.text = event.target.value;\n  }\n\n  /***********************************************************************************\n                               CRUD ACTIONS\n  ************************************************************************************/\n\n  getBoard () {\n    return this.route.params.subscribe(params => {\n      this.boardId = params && params.id\n      this.boardActivitySvc.getBoardTitle(this.boardId).subscribe((title: string) => this.boardTitle = title);\n      this.sections$ = this.boardActivitySvc.getBoard(this.boardId)\n        .pipe(catchError((err: any) => {\n          if(err.graphQLErrors) {\n            const requiresPin = err.graphQLErrors.some((graphQLError: any) => graphQLError.message === 'Access pin required');\n            if (requiresPin) {\n              this.requiresPin = true;\n            }\n          }\n          return throwError(err)\n      }))\n    });\n  }\n\n  sendPin (number: string) {\n    // send boardId, and pin\n    this.boardActivitySvc.unlockBoard(this.boardId, number)\n      .subscribe((response: any) => {\n        this.requiresPin = false\n        this.subscription = this.getBoard()\n      })\n  }\n\n  createCard (section) {\n    if (this.isAddingSection) return\n    this.boardActivitySvc.createCard(section.id, this.username, this.boardId)\n      .subscribe((card: Card) => this.cardBeingEdited = { id: card.id, parentSectionId: section.id })\n  }\n\n  changeAndSaveCard (event, card, section) {\n    this.changeTextOnCurrentCard(event, card)\n    this.cardBeingEdited = { id: card.id, parentSectionId: section.id }\n  }\n\n  createSection (sectionTitle) {\n    this.boardActivitySvc.createSection(this.boardId, sectionTitle.value).subscribe()\n    this.resetCreateSectionCard(sectionTitle);\n  }\n\n  saveCard (evt, card, section) {\n    if (this.isAddingSection) return\n    if (evt.target.hasAttribute('pin')) {\n      this.cardBeingEdited = { id: card.id, parentSectionId: section.id }\n    }\n  }\n\n  deleteCard (event, card, section) {\n    this.boardActivitySvc.deleteCard(card, section, this.boardId).subscribe();\n  }\n\n  deleteSection (section, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.boardActivitySvc.deleteSection(section, this.boardId).subscribe()\n  }\n\n  saveCurrentlySelectedCard$ (cardToFind: CardBeingEdited) {\n    return this.sections$.pipe(\n      take(1),\n      map(this.filterById(cardToFind.parentSectionId)),\n      pluck('0','cards'),\n      map(this.filterById(cardToFind.id)),\n      pluck('0'),\n      switchMap(card => card ? this.boardActivitySvc.saveCard(cardToFind.parentSectionId, card, this.boardId) : EMPTY)\n    )\n  }\n\n  /***********************************************************************************\n                               NAVBAR ACTIONS\n  ************************************************************************************/\n\n  exportAsPdf (title) {\n    this.sections$.pipe(take(1)).subscribe(sections => {\n      this.exportSvc.exportAsPdf(title, sections)\n    })\n  }\n\n  addToClipboard () {\n    copy(window.location.href)\n  }\n\n  addSection () {\n    this.cardBeingEdited = null;\n    this.isAddingSection = !this.isAddingSection;\n  }\n\n  changeView () {\n    this.view = this.view === View.Artsy ? View.Clean : View.Artsy;\n  }\n}\n","<div\n  class=\"overlay\"\n  [ngClass]=\"{ 'visible': isAddingSection }\"\n></div>\n<div class=\"nav-container\">\n  <app-navbar\n    [showContent]=\"!requiresPin\"\n    [boardTitle]=\"boardTitle\"\n    [viewStyle]=\"view\"\n    (addSection)=\"addSection()\"\n    (exportAsPdf)=\"exportAsPdf(boardTitle)\"\n    (addToClipboard)=\"addToClipboard()\"\n    (changeView)=\"changeView()\"\n    (sendPin)=\"sendPin($event)\"\n  ></app-navbar>\n</div>\n<div class=\"main-container\">\n\n  <!-- CARD USED AS INPUT FOR CREATING SECTIONS :STARTS: -->\n  <app-idea-card\n    [ngClass]=\"{'blank-card': true, 'blank-card__visible': isAddingSection}\"\n    backgroundColor=\"white\"\n    fontSize=\"1.2em\"\n  >\n    <span *ngIf=\"isAddingSection\">\n    <textarea\n      #section\n      maxLength=\"50\"\n      activeFocus\n      (keyup.enter)=\"createSection(section)\"\n    ></textarea>\n    <fa-icon\n      (click)=\"createSection(section)\"\n      [icon]=\"plusIcon\"\n      class=\"icon icon-plus\"\n    ></fa-icon>\n  </span>\n  </app-idea-card>\n  <!-- CARD USED AS INPUT FOR CREATING SECTIONS :ENDS: -->\n\n  <div class=\"main-cover\">\n   <!--  <div *ngIf=\"requiresPin\">\n      <h1>Please enter the pin for this board</h1>\n      <input type=\"text\" #pin>\n      <button (click)=\"sendPin(pin.value)\">submit</button>\n    </div> -->\n    <app-idea-section *ngFor=\"let section of sections$ | async; index as i; trackBy: trackById\">\n\n      <!-- CARD USED AS SECTION HEADING :STARTS: -->\n      <app-idea-card\n        class=\"title\"\n        backgroundColor=\"white\"\n        fontSize=\"1.2em\"\n      >\n        <div>\n          {{section.title}}\n        </div>\n        <fa-icon\n          (click)=\"createCard(section)\"\n          [icon]=\"plusIcon\"\n          class=\"icon icon-plus\"\n        ></fa-icon>\n        <fa-icon\n          (click)=\"deleteSection(section, $event)\"\n          [icon]=\"trashIcon\"\n          class=\"icon icon-trash\"\n        ></fa-icon>\n      </app-idea-card>\n      <!-- CARD USED AS SECTION HEADING :ENDS: -->\n\n      <!-- CARD DISPLAYED IN SECTIONS :STARTS: -->\n      <app-idea-card\n        *ngFor=\"let card of section.cards; trackBy: trackById\"\n        [backgroundColor]=\"getColorForSection(i)\"\n        [editing]=\"isEditing(card.id)\"\n        [withPin]=\"true\"\n        (click)=\"saveCard($event, card, section)\"\n      >\n        <span *ngIf=\"isEditing(card.id); else cardText\">\n          <textarea\n            activeFocus\n            (change)=\"changeTextOnCurrentCard($event, card)\"\n            (keydown.enter)=\"changeAndSaveCard($event, card, section)\"\n          >{{card.text}}</textarea>\n          <fa-icon\n            (click)=\"deleteCard($event, card, section)\"\n            [icon]=\"trashIcon\"\n            class=\"icon icon-trash\"\n          ></fa-icon>\n        </span>\n        <ng-template #cardText>\n          <p class=\"card-text\">{{card.text}}</p>\n          <span class=\"icon icon-trash\">- {{card.author}}</span>\n        </ng-template>\n      </app-idea-card>\n      <!-- CARD DISPLAYED IN SECTIONS :ENDS: -->\n\n    </app-idea-section>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BoardActivityService } from '@services/board-activity.service';\nimport { BrowserStorageService } from '@services/browser-storage.service';\nimport {Apollo} from 'apollo-angular';\nimport { faCog, faLock } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n  public accessPin: string | null;\n  public cogIcon = faCog;\n  public lockIcon = faLock;\n  public settingsActive = false;\n  public sectionNameIdeas = [\n    {text: 'What went well?', selected: false },\n    {text: 'What could be improved?', selected: false },\n    {text: 'Keep doing', selected: false },\n    {text: 'Start doing', selected: false },\n    {text: 'Stop doing', selected: false },\n    {text: 'Less of', selected: false },\n    {text: 'More of', selected: false },\n    {text: 'Action items', selected: false },\n    {text: 'Pros', selected: false },\n    {text: 'Cons', selected: false },\n    {text: 'Risks', selected: false },\n    {text: 'Opportunities', selected: false },\n    {text: 'Assumptions', selected: false },\n    {text: 'Thanks', selected: false }\n\n  ]\n  constructor(\n    private router: Router,\n    private boardActivitySvc: BoardActivityService,\n    private browserStorageSvc: BrowserStorageService\n\n  ) {}\n\n  handleSelectSectionClick (sectionName) {\n    sectionName.selected = !sectionName.selected\n  }\n\n  handlePincodeEntry (pincode: string) {\n    this.accessPin = pincode;\n    this.toggleSettingsPanel();\n  }\n\n  toggleSettingsPanel () {\n    this.settingsActive = !this.settingsActive;\n  }\n\n  handleCreateBoardClick (boardTitle: string) {\n    const selectedSections = this.sectionNameIdeas.filter(section => section.selected).map(section => section.text)\n    this.boardActivitySvc.createBoard(\n      this.browserStorageSvc.user,\n      selectedSections,\n      boardTitle,\n      this.accessPin\n    ).subscribe((newBoard: any) => {\n      if (newBoard) {\n        this.router.navigate(['/board/', newBoard.data.addBoard.id])\n      }\n    })\n  }\n}","<div>\n  <div class=\"main-cover\">\n    <div class=\"panel\">\n      <div class=\"panel-form\">\n        <div class=\"title-input-group\">\n          <label for=\"board-title\">Board Title:</label>\n          <input type=\"text\" id=\"board-title\" #boardTitle/>\n        </div>\n      </div>\n      <div class=\"panel-image\">\n        <div >\n          <div class=\"panel-overlay\">\n            <span\n              class=\"name-idea name-idea__invisible\"\n              [ngClass]=\"{'active': sectionName.selected}\"\n              *ngFor=\"let sectionName of sectionNameIdeas\"\n              (click)=\"handleSelectSectionClick(sectionName)\"\n            >\n              {{ sectionName.text }}\n            </span>\n          </div>\n          <span\n            class=\"name-idea\"\n            [ngClass]=\"{'active': sectionName.selected}\"\n            *ngFor=\"let sectionName of sectionNameIdeas\"\n            (click)=\"handleSelectSectionClick(sectionName)\"\n          >\n            {{ sectionName.text }}\n          </span>\n        </div>\n        <div\n          class=\"settings\"\n          [ngClass]=\"{'visible': settingsActive }\"\n        >\n          <app-pincode\n            *ngIf=\"settingsActive\"\n            [pincodeLength]=\"4\"\n            (pincodeEntered)=\"handlePincodeEntry($event)\"\n          >\n            <span style=\"margin-right: 10px\">Secure board with pincode:</span>\n          </app-pincode>\n         <!--  <label>\n            Reduced privilege for invitees:\n            <input type=\"checkbox\">\n          </label> -->\n        </div>\n      </div>\n\n      <div class=\"panel-form\">\n        <div>\n          <button (click)=\"handleCreateBoardClick(boardTitle.value)\">\n            <fa-icon\n              class=\"icon icon-lock\"\n              *ngIf=\"accessPin\"\n              [icon]=\"lockIcon\"\n            ></fa-icon>\n            Create New Idea Board\n          </button>\n          <button (click)=\"toggleSettingsPanel()\">\n            <fa-icon\n              [icon]=\"cogIcon\"\n            ></fa-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Routes } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page.component';\nimport { BoardPageComponent } from './pages/board-page.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: HomePageComponent\n  },\n  {\n    path: 'board/:id',\n    component: BoardPageComponent\n  }\n]","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport shortid from 'shortid';\n\nimport {Apollo} from 'apollo-angular';\nimport { GetBoard, GetUserToken } from '../../graphql/queries';\nimport {\n  CreateBoard,\n  CreateSection,\n  AddCard,\n  UpdateCard,\n  DeleteCard,\n  DeleteSection,\n  UnlockBoard\n} from '../../graphql/mutations';\nimport { SectionAdded, CardAdded, CardUpdated, CardDeleted, SectionDeleted } from '../../graphql/subscriptions';\nimport { pluck, tap, catchError } from 'rxjs/operators';\nimport {\n  cacheUpdateCardSub,\n  cacheRemoveCardSub,\n  cacheAddSectionSub,\n  cacheRemoveSectionSub,\n  cacheCreateCard,\n  cacheUpdateCard,\n  cacheDeleteCard,\n  cacheCreateSection,\n  cacheDeleteSection,\n} from '../apollo-cache-update.helper'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardActivityService {\n  BASE_URL = 'http://localhost:3000'\n  constructor(\n    private http: HttpClient,\n    private apollo: Apollo\n  ) {}\n\n  private generateId () {\n    return shortid.generate();\n  }\n\n  unlockBoard(boardId: string, pin: string) {\n    return this.apollo.mutate({\n      variables: { boardId, pin },\n      mutation: UnlockBoard\n    })\n  }\n\n  getUserToken (username: string, password: string) {\n    return this.apollo.query({\n      variables: { username, password },\n      query: GetUserToken\n    })\n  }\n\n  getBoardTitle (boardId: string) {\n    return this.apollo.query({\n      variables: { boardId },\n      query: GetBoard\n    })\n    .pipe(pluck('data','getBoard', 'title'))\n  }\n\n  getBoard (boardId: string) {\n    let board = this.apollo\n      .watchQuery({\n        variables: { boardId },\n        query: GetBoard\n      })\n\n    board.subscribeToMore({\n      document: SectionAdded,\n      variables: { boardId },\n      updateQuery: cacheAddSectionSub\n    })\n\n    board.subscribeToMore({\n      document: CardUpdated,\n      variables: { boardId },\n      updateQuery: cacheUpdateCardSub\n    })\n\n    board.subscribeToMore({\n      document: CardDeleted,\n      variables: { boardId },\n      updateQuery: cacheRemoveCardSub\n    })\n\n    board.subscribeToMore({\n      document: SectionDeleted,\n      variables: { boardId },\n      updateQuery: cacheRemoveSectionSub\n    })\n\n    return board.valueChanges\n      .pipe(pluck('data','getBoard', 'sections'))\n  }\n\n  createBoard (user, sectionNames, boardTitle, accessPin) {\n    const boardId = this.generateId ();\n\n    return this.apollo.mutate({\n      mutation: CreateBoard,\n      variables: {\n        sectionNames,\n        newBoard: {\n          title: boardTitle,\n          accessPin,\n          ...user\n        }\n      }\n    })\n  }\n\n  createSection (boardId: string, sectionTitle) {\n    return this.apollo.mutate({\n      mutation: CreateSection,\n      variables: {\n        newSection: {\n          boardId: boardId,\n          title: sectionTitle\n        }\n      },\n      update: cacheCreateSection({ boardId }),\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addSection: {\n          __typename: 'Section',\n          title: sectionTitle,\n          cards: [],\n          id: Math.round(Math.random() * -1000000)\n        }\n      }\n    })\n  }\n\n  saveCard (sectionId: any, changes: any, boardId: string) {\n    const { editing, __typename, ...fields } = changes;\n    return this.apollo.mutate({\n      mutation: UpdateCard,\n      variables: {\n        cardChanges: {\n          sectionId,\n          ...fields\n        },\n        boardId\n      },\n      update: cacheUpdateCard({boardId, sectionId}),\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateCard: {\n          __typename: 'Card',\n          sectionId,\n          ...fields\n        }\n      }\n    })\n  }\n\n  createCard (sectionId: string, author: string, boardId: string) {\n    return this.apollo.mutate({\n      mutation: AddCard,\n      variables: {\n        newCard: {\n          author,\n          sectionId\n        },\n        boardId\n      },\n      update: cacheCreateCard({boardId, sectionId})\n    })\n    .pipe(pluck('data','addCard'))\n  }\n\n  deleteCard (card: any, section: any, boardId: string) {\n    return this.apollo.mutate({\n      mutation: DeleteCard,\n      variables: { cardId: card.id, sectionId: section.id, boardId },\n      update: cacheDeleteCard({boardId, sectionId: section.id, cardId: card.id}),\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        deleteCard: {\n          __typename: \"Card\",\n          ...card,\n          sectionId: section.id\n        }\n      }\n    })\n  }\n\n  deleteSection (section: any, boardId: string) {\n    return this.apollo.mutate({\n      mutation: DeleteSection,\n      variables: { sectionId: section.id, boardId },\n      update: cacheDeleteSection({boardId, sectionId: section.id})\n    })\n  }\n}","import { Injectable } from '@angular/core';\nimport { User } from '@models';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrowserStorageService {\n  private _user: User;\n  private _token: string;\n\n  set token (token: string) {\n    this._token = token;\n    window.localStorage.setItem('token', token);\n  }\n\n  get token () {\n    if (this._token) return this._token;\n    this._token = window.localStorage.getItem('token');\n    return this._token;\n  }\n\n  get user () {\n    if (this._user) return this._user\n    try {\n      const stringifiedUser = window.localStorage.getItem('user');\n      this._user = JSON.parse(stringifiedUser);\n      return this._user;\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  set user (user: User) {\n    try {\n      this._user = user;\n      const stringifiedUser = JSON.stringify(user);\n      window.localStorage.setItem('user', stringifiedUser);\n    } catch (e) {\n      console.error(e);\n    }\n\n  }\n}","import { Injectable } from '@angular/core';\n\nexport enum CardColor {\n  Blue = '#e7e7fc',\n  Green = '#d0f4d0',\n  Orange = '#fce0ab',\n  Purple = '#febffe',\n  Red = '#ffcaca',\n  Yellow = '#fafacc'\n}\n\nconst sectionColors: CardColor[] = [\n  CardColor.Red,\n  CardColor.Orange,\n  CardColor.Yellow,\n  CardColor.Green,\n  CardColor.Blue,\n  CardColor.Purple\n]\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorProviderService {\n  get colorCount () {\n    return sectionColors.length\n  }\n\n  colorAtIndex (num: number) {\n    return sectionColors[num % this.colorCount]\n  }\n}","import { Injectable } from '@angular/core';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { ColorProviderService } from './color-provider.service';\n\nenum TableThemes {\n  Plain = 'plain',\n  Grid = 'grid',\n  Striped = 'striped',\n  Css = 'css'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportBoardService {\n  constructor(private colorProviderSvc: ColorProviderService) {}\n\n  private addColumn(columnHeading: string, cellWidth?: number) {\n    const column = { content: columnHeading }\n    return cellWidth ? { ...column, styles: { cellWidth }} : column;\n  }\n\n  private addCardToRow(card: any) {\n    return [card.text, card.votes || 3, card.author]\n  }\n\n  private createDocumentHeading (pageTitle: string) {\n    return {\n      theme: TableThemes.Plain,\n      headStyles:{\n        halign: 'center',\n        fontSize: 20,\n        fontStyle: 'bold',\n        textColor: 'black'\n      },\n      head: [[pageTitle]]\n    }\n  }\n\n  private createTable (section: any, headerColor: string, pdfDocument: any) {\n    return {\n      theme: TableThemes.Grid,\n      headStyles:{ fillColor: headerColor, textColor: 'black' },\n      head: [[\n        this.addColumn(section.title),\n        this.addColumn('Votes', 15),\n        this.addColumn('Author', 30)\n      ]],\n      body: section.cards.map(this.addCardToRow),\n      startY: pdfDocument.lastAutoTable.finalY + 5\n    }\n  }\n\n  exportAsPdf (pageTitle: string, sections: any) {\n    const pdfDocument = new jsPDF();\n\n    // Create a single row table to act as page heading\n    pdfDocument.autoTable(this.createDocumentHeading(pageTitle));\n\n    // Create a table for each of the sections of the board\n    sections.forEach((section, index) =>\n      pdfDocument.autoTable(this.createTable(section, this.colorProviderSvc.colorAtIndex(index), pdfDocument))\n    )\n\n    // Save the pdf to the users computer\n    pdfDocument.save('table.pdf')\n\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import gql from 'graphql-tag';\n\nexport const CreateSection = gql`\n  mutation CreateSection($newSection: NewSectionInput){\n    addSection(newSection: $newSection){\n      id: _id\n      title\n      cards {\n        id: _id\n      }\n    }\n  }\n`\n\nexport const UpdateCard = gql`\n  mutation UpdateCard($cardChanges: UpdateCardInput, $boardId: String!){\n    updateCard(cardChanges: $cardChanges, boardId: $boardId) {\n      id: _id\n      sectionId\n      text\n      author\n    }\n  }\n`\n\nexport const UpdateSection = gql`\n  mutation UpdateSection($sectionChanges: UpdateSectionInput){\n    updateSection(sectionChanges: $sectionChanges) {\n      title\n    }\n  }\n`\n\nexport const CreateBoard = gql`\n  mutation CreateBoard($newBoard: NewBoardInput, $sectionNames: [String]) {\n    addBoard(newBoard: $newBoard, sectionNames: $sectionNames) {\n      title\n      id: _id\n      sections{\n        title\n      }\n    }\n  }\n`\n\nexport const AddCard = gql`\n  mutation AddCard($newCard: NewCardInput, $boardId: String!) {\n    addCard(newCard: $newCard, boardId: $boardId) {\n      id: _id\n      author\n      text\n    }\n  }\n`\n\nexport const DeleteCard = gql`\n  mutation DeleteCard($cardId: String!, $sectionId: String!, $boardId: String!) {\n    deleteCard(cardId: $cardId, sectionId: $sectionId, boardId: $boardId) {\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const DeleteSection = gql`\n  mutation DeleteSection($sectionId: String!, $boardId: String!) {\n    deleteSection(sectionId: $sectionId, boardId: $boardId) {\n      id: _id\n    }\n  }\n`\n\nexport const UnlockBoard = gql`\n  mutation UnlockBoard($boardId: String!, $pin: String!) {\n    unlockBoard(boardId: $boardId, pin: $pin)\n  }\n`\n","import gql from 'graphql-tag';\n\nexport const GetBoard = gql`\n    query GetBoard($boardId: ID) {\n      getBoard(boardId: $boardId){\n        __typename\n        title\n        sections {\n          __typename\n          id: _id\n          cards {\n            id: _id\n            text\n            author\n          }\n          title\n        }\n      }\n    }\n`;\n\nexport const GetUserToken = gql`\n  query GetUserToken($username: String!, $password: String!) {\n    getUserToken(username: $username, password: $password)\n  }\n`\n\n","import gql from 'graphql-tag';\n\nexport const SectionAdded = gql`\n  subscription SectionAdded($boardId: String!) {\n    sectionAdded(boardId: $boardId) {\n      __typename\n      title\n      id: _id\n      cards {\n        text\n        title\n        author\n      }\n    }\n  }\n`\n\nexport const CardAdded = gql`\n  subscription CardAdded($boardId: String!) {\n    cardAdded(boardId: $boardId){\n      text\n      author\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const CardUpdated = gql`\n  subscription CardUpdated($boardId: String!) {\n    cardUpdated(boardId: $boardId){\n      text\n      author\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const CardDeleted = gql`\n  subscription CardDeleted($boardId: String!) {\n    cardDeleted(boardId: $boardId){\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const SectionDeleted = gql`\n  subscription SectionDeleted($boardId: String!) {\n    sectionDeleted(boardId: $boardId){\n      id: _id\n    }\n  }\n`\n\nexport const BoardAdded = gql`\n  subscription BoardAdded {\n    boardAdded {\n      title\n    }\n  }\n`","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}