{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/apollo-cache-update.helper.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/board-tape.component.ts","webpack:///src/app/components/idea-card.component.ts","webpack:///src/app/components/idea-section.component.ts","webpack:///src/app/components/navbar.component.ts","webpack:///src/app/components/pincode.component.ts","webpack:///src/app/directives/active-focus.directive.ts","webpack:///src/app/graphql.module.ts","webpack:///src/app/pages/board-page.component.ts","webpack:///src/app/pages/board-page.component.html","webpack:///src/app/pages/home-page.component.ts","webpack:///src/app/pages/home-page.component.html","webpack:///src/app/route.config.ts","webpack:///src/app/services/board-activity.service.ts","webpack:///src/app/services/browser-storage.service.ts","webpack:///src/app/services/color-provider.service.ts","webpack:///src/app/services/export-board.service.ts","webpack:///src/environments/environment.ts","webpack:///src/graphql/mutations.ts","webpack:///src/graphql/queries.ts","webpack:///src/graphql/subscriptions.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","getBoard","boardId","query","variables","findById","item","cacheUpdateCardSub","prev","subscriptionData","sections","cardUpdated","data","sectionToBeUpdated","find","section","sectionId","cardToUpdate","cards","card","push","cacheRemoveCardSub","cardDeleted","cardId","filter","cacheRemoveSectionSub","sectionDeleted","cacheAddSectionSub","sectionAdded","cacheCreateCard","store","addCard","readQuery","chosenSection","editing","writeQuery","cacheUpdateCard","updateCard","alreadyHasCard","c","cacheDeleteCard","s","cacheCreateSection","addSection","alreadyHasSection","some","cacheDeleteSection","AppComponent","browserStorageSvc","boardActivitySvc","title","user","token","username","password","getUserToken","subscribe","result","selector","templateUrl","styleUrls","AppModule","forRoot","declarations","imports","providers","bootstrap","BoardTapeComponent","angle","Math","floor","random","template","styles","IdeaCardComponent","roughSvg","svg","chosenDimensions","dimensions","node","rectangle","roughness","fill","backgroundColor","fillStyle","stroke","borderColor","hachureGap","strokeWidth","nativeElement","appendChild","IdeaSectionComponent","changeView","addToClipboard","exportAsPdf","NavbarComponent","sendPin","pincode","emit","PincodeComponent","pincodeEntered","_characters","Array","pincodeLength","target","value","next","nextElementSibling","focus","index","lastPinIndex","stopPropagation","length","handleKeyup","ActiveFocusDirective","eleRef","el","selectionStart","selectionEnd","createTextRange","range","collapse","select","putCursorAtEnd","SERVER_PATH","GraphQLModule","provide","useFactory","httpLink","ws","uri","options","reconnect","http","create","authLink","_","headers","localStorage","getItem","authorization","cache","link","kind","operation","concat","deps","View","BoardPageComponent","route","exportSvc","colorProvider","isAddingSection","requiresPin","trashIcon","plusIcon","view","Artsy","cardBeingEdited","subscription","unsubscribe","num","colorAtIndex","sectionTitle","searchId","arrayOfObjects","obj","event","text","params","getBoardTitle","boardTitle","sections$","pipe","err","graphQLErrors","graphQLError","message","number","unlockBoard","response","createCard","parentSectionId","changeTextOnCurrentCard","createSection","resetCreateSectionCard","evt","hasAttribute","deleteCard","preventDefault","deleteSection","cardToFind","filterById","saveCard","window","location","href","Clean","noNewCardWasSelected","selectedCardWasClickedAgain","_cardBeingEdited","aCardIsAlreadySelected","aCardWasSelected","saveCurrentlySelectedCard$","HomePageComponent","router","cogIcon","lockIcon","settingsActive","sectionNameIdeas","selected","sectionName","accessPin","toggleSettingsPanel","selectedSections","map","createBoard","newBoard","navigate","addBoard","handleCreateBoardClick","appRoutes","path","component","BoardActivityService","apollo","BASE_URL","generate","pin","mutate","mutation","board","watchQuery","subscribeToMore","document","updateQuery","valueChanges","sectionNames","generateId","newSection","update","optimisticResponse","__typename","round","changes","cardChanges","fields","author","newCard","providedIn","BrowserStorageService","_token","setItem","_user","stringifiedUser","JSON","parse","console","error","stringify","CardColor","sectionColors","Red","Orange","Yellow","Green","Blue","Purple","ColorProviderService","colorCount","TableThemes","ExportBoardService","colorProviderSvc","columnHeading","cellWidth","column","content","votes","pageTitle","theme","Plain","headStyles","halign","fontSize","fontStyle","textColor","head","headerColor","pdfDocument","Grid","fillColor","addColumn","body","addCardToRow","startY","lastAutoTable","finalY","autoTable","createDocumentHeading","forEach","createTable","save","environment","production","CreateSection","UpdateCard","UpdateSection","CreateBoard","AddCard","DeleteCard","DeleteSection","UnlockBoard","GetBoard","GetUserToken","SectionAdded","CardAdded","CardUpdated","CardDeleted","SectionDeleted","BoardAdded","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { GetBoard } from '../graphql/queries';\n\ninterface EntityIDs {\n  boardId: string;\n  cardId?: string;\n  sectionId?: string;\n}\n\nconst getBoard = (boardId: string) => ({\n  query: GetBoard,\n  variables: { boardId }\n})\n\nconst findById = (id) => (item) => item.id === id;\n\nexport const cacheUpdateCardSub = (prev: any, { subscriptionData }) => {\n  const { sections } = prev.getBoard;\n  const { cardUpdated } = subscriptionData.data;\n  const sectionToBeUpdated = sections.find(section => section.id === cardUpdated.sectionId);\n  const cardToUpdate = sectionToBeUpdated.cards.find(card => card.id === cardUpdated.id);\n\n  if (!cardToUpdate) {\n    sectionToBeUpdated.cards.push(cardUpdated);\n  }\n  return prev\n}\n\nexport const cacheRemoveCardSub = (prev: any, { subscriptionData}) => {\n  const { sections } = prev.getBoard;\n  const { id: cardId, sectionId } = subscriptionData.data.cardDeleted;\n  const sectionToBeUpdated = sections.find(section => section.id === sectionId);\n  sectionToBeUpdated.cards = sectionToBeUpdated.cards.filter(card => card.id !== cardId)\n  return prev\n}\n\nexport const cacheRemoveSectionSub = (prev: any, { subscriptionData }) => {\n  const { sections } = prev.getBoard;\n  const { id: sectionId } = subscriptionData.data.sectionDeleted;\n  prev.getBoard.sections = sections.filter(section => section.id !== sectionId)\n  return prev\n}\n\nexport const cacheAddSectionSub = (prev: any, { subscriptionData}) => {\n  return {\n    ...prev,\n    getBoard: {\n      ...prev.getBoard,\n      sections: [\n        ...prev.getBoard.sections,\n        subscriptionData.data.sectionAdded\n      ]\n    }\n  }\n}\n\nexport const cacheCreateCard = ({boardId, sectionId}: EntityIDs) =>\n  (store, { data: { addCard }}: any) => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // Find the section the card belongs to\n    const chosenSection = data.getBoard.sections.find(section => section.id === sectionId);\n\n    // Add the card to the section\n    chosenSection.cards.push({...addCard, editing: true})\n\n    // Write the data back to the cache.\n    store.writeQuery({...getBoard(boardId), data});\n  }\n\nexport const cacheUpdateCard = ({boardId, sectionId}: EntityIDs) =>\n    (store, { data: { updateCard } }: any) => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // Find the section the card belongs to\n    const chosenSection = data.getBoard.sections.find(section => section.id === sectionId);\n\n    const alreadyHasCard = chosenSection.cards.find(c => c.id === updateCard.id)\n\n    // if the section doesn't have the card, we need to add it to the section\n    if (!alreadyHasCard){\n      chosenSection.cards.push(updateCard)\n      // Write the data back to the cache.\n      store.writeQuery({...getBoard(boardId), data});\n    }\n  }\n\nexport const cacheDeleteCard = ({boardId, sectionId, cardId}: EntityIDs) =>\n  store => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // Find the section from which to remove the card\n    const chosenSection = data.getBoard.sections.find(s => s.id === sectionId);\n\n    // Remove the card from the section\n    chosenSection.cards = chosenSection.cards.filter(c => c.id !== cardId);\n\n    // Write the data back to the cache.\n    store.writeQuery({...getBoard(boardId), data});\n  }\n\nexport const cacheCreateSection = ({ boardId }: EntityIDs) =>\n  (store, { data: { addSection } }: any) => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    const alreadyHasSection = data.getBoard.sections.some(findById(addSection.id))\n\n    if (!alreadyHasSection){\n      // Add our section from the mutation to the end.\n      data.getBoard.sections.push(addSection);\n      // Write the data back to the cache.\n      store.writeQuery({ ...getBoard(boardId), data });\n    }\n  }\n\nexport const cacheDeleteSection = ({ boardId, sectionId }: EntityIDs) =>\n  store => {\n    // Read the data from the cache for this query.\n    const data: any = store.readQuery(getBoard(boardId));\n\n    // remove section from board\n    data.getBoard.sections = data.getBoard.sections.filter(s => s.id !== sectionId);\n\n    store.writeQuery({ ...getBoard(boardId), data });\n  }\n","import { Component, OnInit } from '@angular/core';\nimport { BrowserStorageService } from '@services/browser-storage.service';\nimport { BoardActivityService } from '@services/board-activity.service';\nimport { User } from '@models';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'ideaz-board';\n  user: User;\n  token: string;\n\n  constructor (\n    private browserStorageSvc: BrowserStorageService,\n    private boardActivitySvc: BoardActivityService\n  ) {}\n\n  ngOnInit () {\n    this.user = this.browserStorageSvc.user;\n    this.token = this.browserStorageSvc.token;\n  }\n\n  addUser (username, password) {\n    if (!(username && password)) return;\n    this.boardActivitySvc.getUserToken(username, password)\n      .subscribe((result: any) => {\n        this.token = result.data.getUserToken;\n        this.browserStorageSvc.token = result.data.getUserToken\n      })\n\n    const user: User = { username, password };\n    this.browserStorageSvc.user = user;\n    this.user = user;\n  }\n}\n","<div class=\"top-level-overlay\" *ngIf=\"!token\">\n  <div class=\"box box__outer\">\n    <p>Please add your name and password to help distinguish your posts.</p>\n    <div class=\"box__inner\">\n      <span>\n        <!-- <label for=\"initials\">\n          Initials\n        </label> -->\n        <input type=\"text\" placeholder=\"Username\" id=\"username\" #username>\n      </span>\n      <span>\n   <!--      <label for=\"email\">\n          Email\n        </label> -->\n        <input type=\"text\" placeholder=\"Password\" id=\"password\" #password>\n      </span>\n    </div>\n    <button (click)=\"addUser(username.value, password.value)\">Add</button>\n  </div>\n</div>\n<div class=\"app-layout\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { NavbarComponent } from '@components/navbar.component';\nimport { AppComponent } from './app.component';\n\nimport { IdeaCardComponent } from '@components/idea-card.component';\nimport { IdeaSectionComponent } from '@components/idea-section.component';\nimport { BoardTapeComponent } from '@components/board-tape.component';\nimport { PincodeComponent } from '@components/pincode.component';\n\nimport { appRoutes } from './route.config';\n\nimport { HomePageComponent } from '@pages/home-page.component';\nimport { BoardPageComponent } from '@pages/board-page.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\n\nimport { ActiveFocusDirective } from './directives/active-focus.directive';\nimport { GraphQLModule } from './graphql.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IdeaCardComponent,\n    IdeaSectionComponent,\n    BoardTapeComponent,\n    NavbarComponent,\n    HomePageComponent,\n    PincodeComponent,\n    BoardPageComponent,\n    ActiveFocusDirective\n    // ...appRoutes.map(route => route.component).filter(c => !!c)\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    GraphQLModule,\n    FontAwesomeModule,\n    // RouterModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-board-tape',\n  template: `\n    <div\n      class=\"board-tape\"\n      [ngStyle]=\"{\n        top: vertical ? '-13%' : 0,\n        height: vertical ? '110%' : '30px',\n        margin: vertical ? '5px 10px': '10px',\n        width: vertical ? '30px': 'calc(100% - 50px)',\n        transform: 'rotateZ(' + angle + 'deg)',\n        left: vertical ? 0 : '10px'\n      }\"\n    ></div>\n  `,\n  styles: [`\n    .board-tape {\n      min-width: 30px;\n      display: block;\n      position: relative;\n      background: rgba(255,255,200, 0.6);\n      box-shadow: 0 1px 3px rgba(0,0,0,0.4);\n    }\n  `]\n})\nexport class BoardTapeComponent implements OnInit {\n  @Input() vertical: boolean;\n  angle: number;\n  ngOnInit () {\n    this.angle = Math.floor(Math.random() * 3) - 1;\n  }\n}","import { Component, Input, ViewChild, OnInit } from '@angular/core';\nimport rough from 'roughjs/bundled/rough.esm.js';\n\n@Component({\n  selector: 'app-idea-card',\n  template: `\n    <div\n      [ngClass]=\"{'ib-card': true, 'editing': editing }\"\n      [ngStyle]=\"{'width.px': chosenDimensions[2] || 230, 'height.px': chosenDimensions[3] || 160}\"\n      tabindex=\"0\"\n    >\n      <div class=\"pin-wrapper\" *ngIf=\"withPin\">\n        <div id=\"push-pin\" [ngClass]=\"{'edit': editing}\" pin></div>\n      </div>\n      <div\n        class=\"ib-card-content\"\n        [style.color]=\"color\"\n        [style.fontSize]=\"fontSize || '1.1rem'\"\n      >\n        <ng-content></ng-content>\n      </div>\n      <svg #svg></svg>\n    </div>\n  `,\n  styleUrls: ['./idea-card.component.css']\n})\nexport class IdeaCardComponent implements OnInit {\n  private roughSvg: any;\n  private node: any;\n  public chosenDimensions: [number, number, number, number];\n  // angle: number;\n  @Input() text: string;\n  @Input() backgroundColor: string;\n  @Input() borderColor: string;\n  @Input() color: string;\n  @Input() fillStyle: string;\n  @Input() roughness: number;\n  @Input() fontSize: string;\n  @Input() editing: boolean;\n  @Input() withPin: boolean;\n  @Input() hachureGap: number;\n  @Input() strokeWidth: number;\n  @Input() dimensions: [number, number, number, number];\n\n  @ViewChild('svg', { static: true }) svg;\n\n  ngOnInit() {\n    // this.angle = Math.floor(Math.random() * 3) - 1;\n    this.roughSvg = rough.svg(this.svg);\n\n    this.chosenDimensions = this.dimensions || [ 5, 5, 230, 160];\n\n    this.node = this.roughSvg.rectangle(...this.chosenDimensions, {\n      roughness: this.roughness || 0.9,\n      fill: this.backgroundColor || 'pink',\n      fillStyle: this.fillStyle || 'solid',\n      stroke: this.borderColor || 'black',\n      hachureGap: this.hachureGap || 0,\n      strokeWidth: this.strokeWidth || .5\n    })\n    // let outline = this.node.querySelector('path:last-child');\n    // outline.setAttribute('style', 'stroke-width: 1; fill: none;')\n    // outline.setAttribute('class', 'card-outline')\n    this.svg.nativeElement.appendChild(this.node)\n\n    // this.node = this.roughSvg.path('M32 464a48 48 0 0 0 48 48h288a48 48 0 0 0 48-48V128H32zm272-256a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zm-96 0a16 16 0 0 1 32 0v224a16 16 0 0 1-32 0zM432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z', {\n    //   // fill: 'red',\n    //   roughness: this.roughness || 2.5,\n    //   fill: this.backgroundColor || 'pink',\n    //   // hachureAngle: 60,\n    //   // hachureGap:5,\n    //   fillStyle: this.fillStyle || 'solid',\n    //   stroke: this.borderColor || 'black',\n    //   strokeWidth: 10,\n    //   // viewBox: '0 0 800 800',\n    //   // width: '25'\n    // })\n\n    // this.svg.nativeElement.appendChild(this.node)\n  }\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-idea-section',\n  template: `\n    <section>\n      <div>\n        <div class=\"section-title\">\n          <ng-content select='.title'></ng-content>\n        </div>\n        <app-board-tape [vertical]=\"true\"></app-board-tape>\n        <div [style.width]=\"'100%'\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n      <app-board-tape></app-board-tape>\n    </section>\n  `,\n  styles: [`\n    section {\n      height: 100%;\n      margin: 30px 0;\n    }\n    section > div {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      position: relative;\n      margin-bottom: -20px;\n    }\n\n    app-board-tape {\n      height: 100%;\n    }\n  `]\n})\nexport class IdeaSectionComponent {}","import { Component, EventEmitter, Output, Input, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  template: `\n    <nav>\n      <div *ngIf=\"showContent\" class=\"navbar-content\">\n        <div class=\"nav-title \">\n          <div class=\"nav-user\" *ngIf=\"boardTitle\">\n            {{boardTitle}}\n          </div>\n        </div>\n        <span class=\"routes\">\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"changeView.emit()\">\n              VIEW: {{viewStyle}}\n            </span>\n          </div>\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"addToClipboard.emit()\">\n              COPY URL\n            </span>\n          </div>\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"exportAsPdf.emit()\">\n              EXPORT\n            </span>\n          </div>\n          <div class=\"nav-item\">\n            <span class=\"nav-link\" (click)=\"addSection.emit()\">\n              +SECTION\n            </span>\n          </div>\n        </span>\n      </div>\n      <div *ngIf=\"!showContent\" class=\"access-pin\">\n        <app-pincode [pincodeLength]=\"4\" (pincodeEntered)=\"handlePinEntry($event)\">\n          <div class=\"nav-title nav-user\">This board is pin protected:</div>\n        </app-pincode>\n      </div>\n    </nav>\n  `,\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  @Input() boardTitle: string;\n  @Input() viewStyle: string;\n  @Input() showContent: boolean;\n  @Output() addSection = new EventEmitter();\n  @Output() exportAsPdf = new EventEmitter();\n  @Output() addToClipboard = new EventEmitter();\n  @Output() changeView = new EventEmitter();\n  @Output() sendPin = new EventEmitter();\n  private pincode = '';\n\n  handlePinEntry (pincode: string) {\n    this.sendPin.emit(pincode);\n  }\n\n  // handleKeyup (e) {\n  //   console.log(e.target.value)\n  //   this.pincode = this.pincode + e.target.value;\n  //   let next = new ElementRef(e.target.nextSibling);\n  //   next.nativeElement.focus();\n  // }\n\n  // handleLastKeyup (e) {\n  //   e.stopPropagation();\n  //   this.sendPin.emit(this.pincode + e.target.value);\n  //   this.pincode = '';\n  //   console.log(this.pincode + e.target.value)\n  // }\n}","import { Component, Input, Output, EventEmitter, OnInit, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-pincode',\n  template: `\n    <div class=\"access-pin\" (keyup)=\"handleKeyup($event)\">\n      <label for=\"pincode-first-char\">\n        <ng-content></ng-content>\n      </label>\n      <input\n        id=\"pincode-first-char\"\n        type=\"password\"\n        class=\"single-digit\"\n        maxlength=\"1\"\n        activeFocus\n      />\n      <input\n        type=\"password\"\n        class=\"single-digit\"\n        maxlength=\"1\"\n        *ngFor=\"let char of characters; index as i;\"\n        (keyup)=\"handleLastPinKey($event, i)\"\n      />\n    </div>\n  `,\n  styles: [`\n    .access-pin {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .single-digit {\n      width: 20px;\n      margin: 0 1px;\n      text-align: center;\n    }\n\n    .access-pin {\n      justify-content: center;\n    }\n  `]\n})\nexport class PincodeComponent implements OnInit {\n  @Input() pincodeLength: number;\n  @Output() pincodeEntered = new EventEmitter();\n  private _characters: any[];\n  private pincode = '';\n\n  ngOnInit () {\n    this._characters = new Array(this.pincodeLength - 1); // minus 1 for the extra input outside the loop\n  }\n\n  get characters () {\n    return this._characters;\n  }\n\n  get lastPinIndex () {\n    return this._characters.length - 1;\n  }\n\n  handleKeyup (e) {\n    this.pincode = this.pincode + e.target.value;\n    let next = new ElementRef(e.target.nextElementSibling);\n    next.nativeElement.focus();\n  }\n\n  handleLastPinKey (e, index) {\n    if (index !== this.lastPinIndex) return;\n    e.stopPropagation();\n    this.pincodeEntered.emit(this.pincode + e.target.value);\n    this.pincode = '';\n  }\n}","import { Directive, ElementRef, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[activeFocus]'\n})\nexport class ActiveFocusDirective implements AfterViewInit {\n\n  constructor(private eleRef: ElementRef) {}\n\n  private putCursorAtEnd (el: any) {\n    if (typeof el.selectionStart == \"number\") {\n      el.selectionStart = el.selectionEnd = el.value.length;\n      el.focus()\n    } else if (el.createTextRange) {\n      el.focus();\n      var range = el.createTextRange();\n      range.collapse(false);\n      range.select();\n    }\n  }\n\n  ngAfterViewInit () {\n    this.putCursorAtEnd(this.eleRef.nativeElement)\n  }\n\n}","import {NgModule} from '@angular/core';\nimport {ApolloModule, APOLLO_OPTIONS} from 'apollo-angular';\nimport {HttpLinkModule, HttpLink} from 'apollo-angular-link-http';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { getMainDefinition } from 'apollo-utilities';\nimport { onError } from 'apollo-link-error';\n\n// const uri = 'http://localhost:3000/graphql';\nconst SERVER_PATH = 'localhost:4000/graphql'; // <-- add the URL of the GraphQL server here\n// export function createApollo(httpLink: HttpLink) {\n//   return {\n//     link: httpLink.create({uri: `http://${SERVER_PATH}`}),\n//     cache: new InMemoryCache(),\n//   };\n// }\n\n\n@NgModule({\n  exports: [ApolloModule, HttpLinkModule],\n  providers: [{\n    provide: APOLLO_OPTIONS,\n    useFactory: (httpLink: HttpLink) => {\n\n      const ws = new WebSocketLink({\n        uri: `ws://${SERVER_PATH}`,\n        options: {\n          reconnect: true\n        }\n      });\n\n      const http = httpLink.create({\n        uri: `http://${SERVER_PATH}`\n      });\n\n      const authLink = setContext((_, { headers }) => {\n        // get the authentication token from local storage if it exists\n        const token = localStorage.getItem('token');\n        // return the headers to the context so httpLink can read them\n        return {\n          headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : \"\",\n          }\n        }\n      });\n\n      // const errorLink = onError(({ graphQLErrors, networkError }) => {\n      //   if (graphQLErrors)\n      //     graphQLErrors.map(({ message, locations, path }) =>\n      //       console.log(\n      //         `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n      //       ),\n      //     );\n\n      //   if (networkError) console.log(`[Network error]: ${networkError}`);\n      // });\n\n      return {\n        cache: new InMemoryCache(),\n        link: split(({ query }) => {\n          const { kind, operation }: any = getMainDefinition(query);\n          return kind === 'OperationDefinition' && operation === 'subscription';\n        }, ws, authLink.concat(http))\n      }\n    },\n    deps: [HttpLink]\n  }],\n})\nexport class GraphQLModule {}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BoardActivityService } from '@services/board-activity.service';\nimport { ColorProviderService } from '@services/color-provider.service';\nimport { ExportBoardService } from '@services/export-board.service';\nimport { BrowserStorageService } from '@services/browser-storage.service';\nimport { CardStyle, Section, Board, Card } from '@models';\nimport { GetBoard } from '../../graphql/queries';\nimport { take, pluck, map, switchMap, catchError } from 'rxjs/operators';\nimport { EMPTY, Observable, throwError } from 'rxjs';\nimport { faTrashAlt, faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport copy from 'copy-text-to-clipboard';\n\ntype CardBeingEdited = {\n  id: string;\n  parentSectionId: string\n}\n\nenum View {\n  Clean = 'CLEAN',\n  Artsy = 'ARTSY'\n}\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './board-page.component.html',\n  styleUrls: ['./board-page.component.css']\n})\nexport class BoardPageComponent implements OnInit, OnDestroy {\n  private subscription: any;\n  private boardId: string;\n  private _cardBeingEdited: CardBeingEdited | null;\n\n  public boardTitle: string;\n  public isAddingSection = false;\n  public sections$: Observable<any>;\n  public view: View;\n  public requiresPin = false;\n  // icons for use in template\n  public trashIcon = faTrashAlt;\n  public plusIcon = faPlusSquare;\n\n\n  constructor(\n    private boardActivitySvc: BoardActivityService,\n    private route: ActivatedRoute,\n    private exportSvc: ExportBoardService,\n    private colorProvider: ColorProviderService,\n    private browserStorageSvc: BrowserStorageService\n  ) {}\n\n  /***********************************************************************************\n                               LIFECYCLE METHODS\n  ************************************************************************************/\n\n  ngOnInit () {\n    this.view = View.Artsy;\n    this.cardBeingEdited = null;\n    this.subscription = this.getBoard();\n  }\n\n  ngOnDestroy () {\n    this.subscription.unsubscribe();\n  }\n\n  /***********************************************************************************\n                               GETTERS / SETTERS\n  ************************************************************************************/\n\n  get username () {\n    const user = this.browserStorageSvc.user;\n    return user.username\n  }\n\n  // The idea of this setter method is to save any card as it exits edit mode.\n  // i.e, when it is pinned back to the board.\n  set cardBeingEdited (card: CardBeingEdited) {\n    const noNewCardWasSelected = () => card == null;\n    const selectedCardWasClickedAgain = () => this._cardBeingEdited.id === card.id;\n    const aCardIsAlreadySelected = () => !!this._cardBeingEdited;\n    const aCardWasSelected = () => card != null;\n\n    if (aCardIsAlreadySelected()) {\n      // Save the card\n      this.saveCurrentlySelectedCard$(this._cardBeingEdited).subscribe();\n\n      if (noNewCardWasSelected() || selectedCardWasClickedAgain()) {\n        // Exit editing mode\n        this._cardBeingEdited = null;\n\n      } else {\n        // Swap the card being edited\n        this._cardBeingEdited = { id: card.id, parentSectionId: card.parentSectionId };\n      }\n    } else if (aCardWasSelected()) {\n      // Enter edit mode with selected card\n      this._cardBeingEdited = { id: card.id, parentSectionId: card.parentSectionId };\n    }\n  }\n\n  get cardBeingEdited () {\n    return this._cardBeingEdited\n  }\n\n  /***********************************************************************************\n                               HELPER METHODS\n  ************************************************************************************/\n\n  // prevent unnecessary re-rendering of existing cards\n  trackById(index, item) {\n    return item.id;\n  }\n\n  getColorForSection (num: number) {\n    return this.colorProvider.colorAtIndex(num);\n  }\n\n  resetCreateSectionCard (sectionTitle) {\n    sectionTitle.value = '';\n    this.isAddingSection = false;\n  }\n\n  isEditing (cardId) {\n    return this.cardBeingEdited && this.cardBeingEdited.id === cardId\n  }\n\n  filterById (searchId) {\n    return arrayOfObjects => arrayOfObjects.filter(obj => obj.id === searchId)\n  }\n\n  changeTextOnCurrentCard (event, card) {\n    card.text = event.target.value;\n  }\n\n  /***********************************************************************************\n                               CRUD ACTIONS\n  ************************************************************************************/\n\n  getBoard () {\n    return this.route.params.subscribe(params => {\n      this.boardId = params && params.id\n      this.boardActivitySvc.getBoardTitle(this.boardId).subscribe((title: string) => this.boardTitle = title);\n      this.sections$ = this.boardActivitySvc.getBoard(this.boardId)\n        .pipe(catchError((err: any) => {\n          if(err.graphQLErrors) {\n            const requiresPin = err.graphQLErrors.some((graphQLError: any) => graphQLError.message === 'Access pin required');\n            if (requiresPin) {\n              this.requiresPin = true;\n            }\n          }\n          return throwError(err)\n      }))\n    });\n  }\n\n  sendPin (number: string) {\n    // send boardId, and pin\n    this.boardActivitySvc.unlockBoard(this.boardId, number)\n      .subscribe((response: any) => {\n        this.requiresPin = false\n        this.subscription = this.getBoard()\n      })\n  }\n\n  createCard (section) {\n    if (this.isAddingSection) return\n    this.boardActivitySvc.createCard(section.id, this.username, this.boardId)\n      .subscribe((card: Card) => this.cardBeingEdited = { id: card.id, parentSectionId: section.id })\n  }\n\n  changeAndSaveCard (event, card, section) {\n    this.changeTextOnCurrentCard(event, card)\n    this.cardBeingEdited = { id: card.id, parentSectionId: section.id }\n  }\n\n  createSection (sectionTitle) {\n    this.boardActivitySvc.createSection(this.boardId, sectionTitle.value).subscribe()\n    this.resetCreateSectionCard(sectionTitle);\n  }\n\n  saveCard (evt, card, section) {\n    if (this.isAddingSection) return\n    if (evt.target.hasAttribute('pin')) {\n      this.cardBeingEdited = { id: card.id, parentSectionId: section.id }\n    }\n  }\n\n  deleteCard (event, card, section) {\n    this.boardActivitySvc.deleteCard(card, section, this.boardId).subscribe();\n  }\n\n  deleteSection (section, event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.boardActivitySvc.deleteSection(section, this.boardId).subscribe()\n  }\n\n  saveCurrentlySelectedCard$ (cardToFind: CardBeingEdited) {\n    return this.sections$.pipe(\n      take(1),\n      map(this.filterById(cardToFind.parentSectionId)),\n      pluck('0','cards'),\n      map(this.filterById(cardToFind.id)),\n      pluck('0'),\n      switchMap(card => card ? this.boardActivitySvc.saveCard(cardToFind.parentSectionId, card, this.boardId) : EMPTY)\n    )\n  }\n\n  /***********************************************************************************\n                               NAVBAR ACTIONS\n  ************************************************************************************/\n\n  exportAsPdf (title) {\n    this.sections$.pipe(take(1)).subscribe(sections => {\n      this.exportSvc.exportAsPdf(title, sections)\n    })\n  }\n\n  addToClipboard () {\n    copy(window.location.href)\n  }\n\n  addSection () {\n    this.cardBeingEdited = null;\n    this.isAddingSection = !this.isAddingSection;\n  }\n\n  changeView () {\n    this.view = this.view === View.Artsy ? View.Clean : View.Artsy;\n  }\n}\n","<div\n  class=\"overlay\"\n  [ngClass]=\"{ 'visible': isAddingSection }\"\n></div>\n<div class=\"nav-container\">\n  <app-navbar\n    [showContent]=\"!requiresPin\"\n    [boardTitle]=\"boardTitle\"\n    [viewStyle]=\"view\"\n    (addSection)=\"addSection()\"\n    (exportAsPdf)=\"exportAsPdf(boardTitle)\"\n    (addToClipboard)=\"addToClipboard()\"\n    (changeView)=\"changeView()\"\n    (sendPin)=\"sendPin($event)\"\n  ></app-navbar>\n</div>\n<div class=\"main-container\">\n\n  <!-- CARD USED AS INPUT FOR CREATING SECTIONS :STARTS: -->\n  <app-idea-card\n    [ngClass]=\"{'blank-card': true, 'blank-card__visible': isAddingSection}\"\n    backgroundColor=\"white\"\n    fontSize=\"1.2em\"\n  >\n    <span *ngIf=\"isAddingSection\">\n    <textarea\n      #section\n      maxLength=\"50\"\n      activeFocus\n      (keyup.enter)=\"createSection(section)\"\n    ></textarea>\n    <fa-icon\n      (click)=\"createSection(section)\"\n      [icon]=\"plusIcon\"\n      class=\"icon icon-plus\"\n    ></fa-icon>\n  </span>\n  </app-idea-card>\n  <!-- CARD USED AS INPUT FOR CREATING SECTIONS :ENDS: -->\n\n  <div class=\"main-cover\">\n   <!--  <div *ngIf=\"requiresPin\">\n      <h1>Please enter the pin for this board</h1>\n      <input type=\"text\" #pin>\n      <button (click)=\"sendPin(pin.value)\">submit</button>\n    </div> -->\n    <app-idea-section *ngFor=\"let section of sections$ | async; index as i; trackBy: trackById\">\n\n      <!-- CARD USED AS SECTION HEADING :STARTS: -->\n      <app-idea-card\n        class=\"title\"\n        backgroundColor=\"white\"\n        fontSize=\"1.2em\"\n      >\n        <div>\n          {{section.title}}\n        </div>\n        <fa-icon\n          (click)=\"createCard(section)\"\n          [icon]=\"plusIcon\"\n          class=\"icon icon-plus\"\n        ></fa-icon>\n        <fa-icon\n          (click)=\"deleteSection(section, $event)\"\n          [icon]=\"trashIcon\"\n          class=\"icon icon-trash\"\n        ></fa-icon>\n      </app-idea-card>\n      <!-- CARD USED AS SECTION HEADING :ENDS: -->\n\n      <!-- CARD DISPLAYED IN SECTIONS :STARTS: -->\n      <app-idea-card\n        *ngFor=\"let card of section.cards; trackBy: trackById\"\n        [backgroundColor]=\"getColorForSection(i)\"\n        [editing]=\"isEditing(card.id)\"\n        [withPin]=\"true\"\n        (click)=\"saveCard($event, card, section)\"\n      >\n        <span *ngIf=\"isEditing(card.id); else cardText\">\n          <textarea\n            activeFocus\n            (change)=\"changeTextOnCurrentCard($event, card)\"\n            (keydown.enter)=\"changeAndSaveCard($event, card, section)\"\n          >{{card.text}}</textarea>\n          <fa-icon\n            (click)=\"deleteCard($event, card, section)\"\n            [icon]=\"trashIcon\"\n            class=\"icon icon-trash\"\n          ></fa-icon>\n        </span>\n        <ng-template #cardText>\n          <p class=\"card-text\">{{card.text}}</p>\n          <span class=\"icon icon-trash\">- {{card.author}}</span>\n        </ng-template>\n      </app-idea-card>\n      <!-- CARD DISPLAYED IN SECTIONS :ENDS: -->\n\n    </app-idea-section>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BoardActivityService } from '@services/board-activity.service';\nimport { BrowserStorageService } from '@services/browser-storage.service';\nimport {Apollo} from 'apollo-angular';\nimport { faCog, faLock } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n  public accessPin: string | null;\n  public cogIcon = faCog;\n  public lockIcon = faLock;\n  public settingsActive = false;\n  public sectionNameIdeas = [\n    {text: 'What went well?', selected: false },\n    {text: 'What could be improved?', selected: false },\n    {text: 'Keep doing', selected: false },\n    {text: 'Start doing', selected: false },\n    {text: 'Stop doing', selected: false },\n    {text: 'Less of', selected: false },\n    {text: 'More of', selected: false },\n    {text: 'Action items', selected: false },\n    {text: 'Pros', selected: false },\n    {text: 'Cons', selected: false },\n    {text: 'Risks', selected: false },\n    {text: 'Opportunities', selected: false },\n    {text: 'Assumptions', selected: false },\n    {text: 'Thanks', selected: false }\n\n  ]\n  constructor(\n    private router: Router,\n    private boardActivitySvc: BoardActivityService,\n    private browserStorageSvc: BrowserStorageService\n\n  ) {}\n\n  handleSelectSectionClick (sectionName) {\n    sectionName.selected = !sectionName.selected\n  }\n\n  handlePincodeEntry (pincode: string) {\n    this.accessPin = pincode;\n    this.toggleSettingsPanel();\n  }\n\n  toggleSettingsPanel () {\n    this.settingsActive = !this.settingsActive;\n  }\n\n  handleCreateBoardClick (boardTitle: string) {\n    const selectedSections = this.sectionNameIdeas.filter(section => section.selected).map(section => section.text)\n    this.boardActivitySvc.createBoard(\n      this.browserStorageSvc.user,\n      selectedSections,\n      boardTitle,\n      this.accessPin\n    ).subscribe((newBoard: any) => {\n      if (newBoard) {\n        this.router.navigate(['/board/', newBoard.data.addBoard.id])\n      }\n    })\n  }\n}","<div>\n  <div class=\"main-cover\">\n    <div class=\"panel\">\n      <div class=\"panel-form\">\n        <div class=\"title-input-group\">\n          <label for=\"board-title\">Board Title:</label>\n          <input type=\"text\" id=\"board-title\" #boardTitle/>\n        </div>\n      </div>\n      <div class=\"panel-image\">\n        <div >\n          <div class=\"panel-overlay\">\n            <span\n              class=\"name-idea name-idea__invisible\"\n              [ngClass]=\"{'active': sectionName.selected}\"\n              *ngFor=\"let sectionName of sectionNameIdeas\"\n              (click)=\"handleSelectSectionClick(sectionName)\"\n            >\n              {{ sectionName.text }}\n            </span>\n          </div>\n          <span\n            class=\"name-idea\"\n            [ngClass]=\"{'active': sectionName.selected}\"\n            *ngFor=\"let sectionName of sectionNameIdeas\"\n            (click)=\"handleSelectSectionClick(sectionName)\"\n          >\n            {{ sectionName.text }}\n          </span>\n        </div>\n        <div\n          class=\"settings\"\n          [ngClass]=\"{'visible': settingsActive }\"\n        >\n          <app-pincode\n            *ngIf=\"settingsActive\"\n            [pincodeLength]=\"4\"\n            (pincodeEntered)=\"handlePincodeEntry($event)\"\n          >\n            <span style=\"margin-right: 10px\">Secure board with pincode:</span>\n          </app-pincode>\n         <!--  <label>\n            Reduced privilege for invitees:\n            <input type=\"checkbox\">\n          </label> -->\n        </div>\n      </div>\n\n      <div class=\"panel-form\">\n        <div>\n          <button (click)=\"handleCreateBoardClick(boardTitle.value)\">\n            <fa-icon\n              class=\"icon icon-lock\"\n              *ngIf=\"accessPin\"\n              [icon]=\"lockIcon\"\n            ></fa-icon>\n            Create New Idea Board\n          </button>\n          <button (click)=\"toggleSettingsPanel()\">\n            <fa-icon\n              [icon]=\"cogIcon\"\n            ></fa-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Routes } from '@angular/router';\nimport { HomePageComponent } from './pages/home-page.component';\nimport { BoardPageComponent } from './pages/board-page.component';\n\nexport const appRoutes: Routes = [\n  {\n    path: '',\n    component: HomePageComponent\n  },\n  {\n    path: 'board/:id',\n    component: BoardPageComponent\n  }\n]","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport shortid from 'shortid';\n\nimport {Apollo} from 'apollo-angular';\nimport { GetBoard, GetUserToken } from '../../graphql/queries';\nimport {\n  CreateBoard,\n  CreateSection,\n  AddCard,\n  UpdateCard,\n  DeleteCard,\n  DeleteSection,\n  UnlockBoard\n} from '../../graphql/mutations';\nimport { SectionAdded, CardAdded, CardUpdated, CardDeleted, SectionDeleted } from '../../graphql/subscriptions';\nimport { pluck, tap, catchError } from 'rxjs/operators';\nimport {\n  cacheUpdateCardSub,\n  cacheRemoveCardSub,\n  cacheAddSectionSub,\n  cacheRemoveSectionSub,\n  cacheCreateCard,\n  cacheUpdateCard,\n  cacheDeleteCard,\n  cacheCreateSection,\n  cacheDeleteSection,\n} from '../apollo-cache-update.helper'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardActivityService {\n  BASE_URL = 'http://localhost:3000'\n  constructor(\n    private http: HttpClient,\n    private apollo: Apollo\n  ) {}\n\n  private generateId () {\n    return shortid.generate();\n  }\n\n  unlockBoard(boardId: string, pin: string) {\n    return this.apollo.mutate({\n      variables: { boardId, pin },\n      mutation: UnlockBoard\n    })\n  }\n\n  getUserToken (username: string, password: string) {\n    return this.apollo.query({\n      variables: { username, password },\n      query: GetUserToken\n    })\n  }\n\n  getBoardTitle (boardId: string) {\n    return this.apollo.query({\n      variables: { boardId },\n      query: GetBoard\n    })\n    .pipe(pluck('data','getBoard', 'title'))\n  }\n\n  getBoard (boardId: string) {\n    let board = this.apollo\n      .watchQuery({\n        variables: { boardId },\n        query: GetBoard\n      })\n\n    board.subscribeToMore({\n      document: SectionAdded,\n      variables: { boardId },\n      updateQuery: cacheAddSectionSub\n    })\n\n    board.subscribeToMore({\n      document: CardUpdated,\n      variables: { boardId },\n      updateQuery: cacheUpdateCardSub\n    })\n\n    board.subscribeToMore({\n      document: CardDeleted,\n      variables: { boardId },\n      updateQuery: cacheRemoveCardSub\n    })\n\n    board.subscribeToMore({\n      document: SectionDeleted,\n      variables: { boardId },\n      updateQuery: cacheRemoveSectionSub\n    })\n\n    return board.valueChanges\n      .pipe(pluck('data','getBoard', 'sections'))\n  }\n\n  createBoard (user, sectionNames, boardTitle, accessPin) {\n    const boardId = this.generateId ();\n\n    return this.apollo.mutate({\n      mutation: CreateBoard,\n      variables: {\n        sectionNames,\n        newBoard: {\n          title: boardTitle,\n          accessPin,\n          ...user\n        }\n      }\n    })\n  }\n\n  createSection (boardId: string, sectionTitle) {\n    return this.apollo.mutate({\n      mutation: CreateSection,\n      variables: {\n        newSection: {\n          boardId: boardId,\n          title: sectionTitle\n        }\n      },\n      update: cacheCreateSection({ boardId }),\n      optimisticResponse: {\n        __typename: 'Mutation',\n        addSection: {\n          __typename: 'Section',\n          title: sectionTitle,\n          cards: [],\n          id: Math.round(Math.random() * -1000000)\n        }\n      }\n    })\n  }\n\n  saveCard (sectionId: any, changes: any, boardId: string) {\n    const { editing, __typename, ...fields } = changes;\n    return this.apollo.mutate({\n      mutation: UpdateCard,\n      variables: {\n        cardChanges: {\n          sectionId,\n          ...fields\n        },\n        boardId\n      },\n      update: cacheUpdateCard({boardId, sectionId}),\n      optimisticResponse: {\n        __typename: 'Mutation',\n        updateCard: {\n          __typename: 'Card',\n          sectionId,\n          ...fields\n        }\n      }\n    })\n  }\n\n  createCard (sectionId: string, author: string, boardId: string) {\n    return this.apollo.mutate({\n      mutation: AddCard,\n      variables: {\n        newCard: {\n          author,\n          sectionId\n        },\n        boardId\n      },\n      update: cacheCreateCard({boardId, sectionId})\n    })\n    .pipe(pluck('data','addCard'))\n  }\n\n  deleteCard (card: any, section: any, boardId: string) {\n    return this.apollo.mutate({\n      mutation: DeleteCard,\n      variables: { cardId: card.id, sectionId: section.id, boardId },\n      update: cacheDeleteCard({boardId, sectionId: section.id, cardId: card.id}),\n      optimisticResponse: {\n        __typename: \"Mutation\",\n        deleteCard: {\n          __typename: \"Card\",\n          ...card,\n          sectionId: section.id\n        }\n      }\n    })\n  }\n\n  deleteSection (section: any, boardId: string) {\n    return this.apollo.mutate({\n      mutation: DeleteSection,\n      variables: { sectionId: section.id, boardId },\n      update: cacheDeleteSection({boardId, sectionId: section.id})\n    })\n  }\n}","import { Injectable } from '@angular/core';\nimport { User } from '@models';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BrowserStorageService {\n  private _user: User;\n  private _token: string;\n\n  set token (token: string) {\n    this._token = token;\n    window.localStorage.setItem('token', token);\n  }\n\n  get token () {\n    if (this._token) return this._token;\n    this._token = window.localStorage.getItem('token');\n    return this._token;\n  }\n\n  get user () {\n    if (this._user) return this._user\n    try {\n      const stringifiedUser = window.localStorage.getItem('user');\n      this._user = JSON.parse(stringifiedUser);\n      return this._user;\n    } catch (e) {\n      console.error(e)\n    }\n  }\n\n  set user (user: User) {\n    try {\n      this._user = user;\n      const stringifiedUser = JSON.stringify(user);\n      window.localStorage.setItem('user', stringifiedUser);\n    } catch (e) {\n      console.error(e);\n    }\n\n  }\n}","import { Injectable } from '@angular/core';\n\nexport enum CardColor {\n  Blue = '#e7e7fc',\n  Green = '#d0f4d0',\n  Orange = '#fce0ab',\n  Purple = '#febffe',\n  Red = '#ffcaca',\n  Yellow = '#fafacc'\n}\n\nconst sectionColors: CardColor[] = [\n  CardColor.Red,\n  CardColor.Orange,\n  CardColor.Yellow,\n  CardColor.Green,\n  CardColor.Blue,\n  CardColor.Purple\n]\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorProviderService {\n  get colorCount () {\n    return sectionColors.length\n  }\n\n  colorAtIndex (num: number) {\n    return sectionColors[num % this.colorCount]\n  }\n}","import { Injectable } from '@angular/core';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport { ColorProviderService } from './color-provider.service';\n\nenum TableThemes {\n  Plain = 'plain',\n  Grid = 'grid',\n  Striped = 'striped',\n  Css = 'css'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExportBoardService {\n  constructor(private colorProviderSvc: ColorProviderService) {}\n\n  private addColumn(columnHeading: string, cellWidth?: number) {\n    const column = { content: columnHeading }\n    return cellWidth ? { ...column, styles: { cellWidth }} : column;\n  }\n\n  private addCardToRow(card: any) {\n    return [card.text, card.votes || 3, card.author]\n  }\n\n  private createDocumentHeading (pageTitle: string) {\n    return {\n      theme: TableThemes.Plain,\n      headStyles:{\n        halign: 'center',\n        fontSize: 20,\n        fontStyle: 'bold',\n        textColor: 'black'\n      },\n      head: [[pageTitle]]\n    }\n  }\n\n  private createTable (section: any, headerColor: string, pdfDocument: any) {\n    return {\n      theme: TableThemes.Grid,\n      headStyles:{ fillColor: headerColor, textColor: 'black' },\n      head: [[\n        this.addColumn(section.title),\n        this.addColumn('Votes', 15),\n        this.addColumn('Author', 30)\n      ]],\n      body: section.cards.map(this.addCardToRow),\n      startY: pdfDocument.lastAutoTable.finalY + 5\n    }\n  }\n\n  exportAsPdf (pageTitle: string, sections: any) {\n    const pdfDocument = new jsPDF();\n\n    // Create a single row table to act as page heading\n    pdfDocument.autoTable(this.createDocumentHeading(pageTitle));\n\n    // Create a table for each of the sections of the board\n    sections.forEach((section, index) =>\n      pdfDocument.autoTable(this.createTable(section, this.colorProviderSvc.colorAtIndex(index), pdfDocument))\n    )\n\n    // Save the pdf to the users computer\n    pdfDocument.save('table.pdf')\n\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import gql from 'graphql-tag';\n\nexport const CreateSection = gql`\n  mutation CreateSection($newSection: NewSectionInput){\n    addSection(newSection: $newSection){\n      id: _id\n      title\n      cards {\n        id: _id\n      }\n    }\n  }\n`\n\nexport const UpdateCard = gql`\n  mutation UpdateCard($cardChanges: UpdateCardInput, $boardId: String!){\n    updateCard(cardChanges: $cardChanges, boardId: $boardId) {\n      id: _id\n      sectionId\n      text\n      author\n    }\n  }\n`\n\nexport const UpdateSection = gql`\n  mutation UpdateSection($sectionChanges: UpdateSectionInput){\n    updateSection(sectionChanges: $sectionChanges) {\n      title\n    }\n  }\n`\n\nexport const CreateBoard = gql`\n  mutation CreateBoard($newBoard: NewBoardInput, $sectionNames: [String]) {\n    addBoard(newBoard: $newBoard, sectionNames: $sectionNames) {\n      title\n      id: _id\n      sections{\n        title\n      }\n    }\n  }\n`\n\nexport const AddCard = gql`\n  mutation AddCard($newCard: NewCardInput, $boardId: String!) {\n    addCard(newCard: $newCard, boardId: $boardId) {\n      id: _id\n      author\n      text\n    }\n  }\n`\n\nexport const DeleteCard = gql`\n  mutation DeleteCard($cardId: String!, $sectionId: String!, $boardId: String!) {\n    deleteCard(cardId: $cardId, sectionId: $sectionId, boardId: $boardId) {\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const DeleteSection = gql`\n  mutation DeleteSection($sectionId: String!, $boardId: String!) {\n    deleteSection(sectionId: $sectionId, boardId: $boardId) {\n      id: _id\n    }\n  }\n`\n\nexport const UnlockBoard = gql`\n  mutation UnlockBoard($boardId: String!, $pin: String!) {\n    unlockBoard(boardId: $boardId, pin: $pin)\n  }\n`\n","import gql from 'graphql-tag';\n\nexport const GetBoard = gql`\n    query GetBoard($boardId: ID) {\n      getBoard(boardId: $boardId){\n        __typename\n        title\n        sections {\n          __typename\n          id: _id\n          cards {\n            id: _id\n            text\n            author\n          }\n          title\n        }\n      }\n    }\n`;\n\nexport const GetUserToken = gql`\n  query GetUserToken($username: String!, $password: String!) {\n    getUserToken(username: $username, password: $password)\n  }\n`\n\n","import gql from 'graphql-tag';\n\nexport const SectionAdded = gql`\n  subscription SectionAdded($boardId: String!) {\n    sectionAdded(boardId: $boardId) {\n      __typename\n      title\n      id: _id\n      cards {\n        text\n        title\n        author\n      }\n    }\n  }\n`\n\nexport const CardAdded = gql`\n  subscription CardAdded($boardId: String!) {\n    cardAdded(boardId: $boardId){\n      text\n      author\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const CardUpdated = gql`\n  subscription CardUpdated($boardId: String!) {\n    cardUpdated(boardId: $boardId){\n      text\n      author\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const CardDeleted = gql`\n  subscription CardDeleted($boardId: String!) {\n    cardDeleted(boardId: $boardId){\n      id: _id\n      sectionId\n    }\n  }\n`\n\nexport const SectionDeleted = gql`\n  subscription SectionDeleted($boardId: String!) {\n    sectionDeleted(boardId: $boardId){\n      id: _id\n    }\n  }\n`\n\nexport const BoardAdded = gql`\n  subscription BoardAdded {\n    boardAdded {\n      title\n    }\n  }\n`","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}